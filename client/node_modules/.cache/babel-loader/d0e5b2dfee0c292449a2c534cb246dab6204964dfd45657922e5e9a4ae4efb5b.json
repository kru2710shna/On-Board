{"ast":null,"code":"var _jsxFileName = \"/Users/krushna/aboutus/client/src/components/News.js\";\nimport React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_NEWS_API_KEY;\nexport class News extends Component {\n  constructor(props) {\n    super(props);\n    this.handlePrevClick = async () => {\n      this.setState({\n        page: this.state.page - 1\n      }, this.update);\n    };\n    this.handleNextClick = async () => {\n      this.setState({\n        page: this.state.page + 1\n      }, this.update);\n    };\n    this.toggleDarkMode = () => {\n      this.setState(prevState => {\n        const newMode = !prevState.darkMode;\n        // Send message to iframe using the ref\n        if (this.iframeRef.current) {\n          this.iframeRef.current.contentWindow.postMessage({\n            darkMode: newMode\n          }, '*');\n        }\n        return {\n          darkMode: newMode\n        };\n      });\n    };\n    this.state = {\n      articles: [],\n      loading: false,\n      page: 1,\n      totalResults: 0,\n      darkMode: false\n    };\n    this.iframeRef = /*#__PURE__*/createRef(); // Create a ref for the iframe\n    document.title = `${this.props.category} - On-Board Break`;\n  }\n  async update() {\n    const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=${apiKey}&page=${this.state.page}&pageSize=${this.props.pageSize}`;\n    this.setState({\n      loading: true\n    });\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    this.setState({\n      articles: parsedData.articles,\n      totalResults: parsedData.totalResults,\n      loading: false\n    });\n  }\n  async componentDidMount() {\n    await this.update(); // Fetch initial articles\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleDarkMode,\n        children: \"Toggle Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        ref: this.iframeRef // Use the ref to access the iframe\n        ,\n        src: \"http://localhost:3001\",\n        height: \"1000\",\n        width: \"1680\",\n        frameBorder: \"0\",\n        scrolling: \"yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;","map":{"version":3,"names":["React","Component","createRef","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","apiKey","process","env","REACT_APP_NEWS_API_KEY","News","constructor","props","handlePrevClick","setState","page","state","update","handleNextClick","toggleDarkMode","prevState","newMode","darkMode","iframeRef","current","contentWindow","postMessage","articles","loading","totalResults","document","title","category","url","country","pageSize","data","fetch","parsedData","json","componentDidMount","render","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","height","width","frameBorder","scrolling","defaultProps","propTypes","string","number"],"sources":["/Users/krushna/aboutus/client/src/components/News.js"],"sourcesContent":["import React, { Component, createRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst apiKey = process.env.REACT_APP_NEWS_API_KEY;\n\nexport class News extends Component {\n    static defaultProps = {\n        country: 'in',\n        pageSize: 8,\n        category: 'general',\n    }\n\n    static propTypes = {\n        country: PropTypes.string,\n        pageSize: PropTypes.number,\n        category: PropTypes.string,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: [],\n            loading: false,\n            page: 1,\n            totalResults: 0,\n            darkMode: false,\n        };\n        this.iframeRef = createRef(); // Create a ref for the iframe\n        document.title = `${this.props.category} - On-Board Break`;\n    }\n\n    async update() {\n        const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=${apiKey}&page=${this.state.page}&pageSize=${this.props.pageSize}`;\n        this.setState({ loading: true });\n        let data = await fetch(url);\n        let parsedData = await data.json();\n        this.setState({\n            articles: parsedData.articles,\n            totalResults: parsedData.totalResults,\n            loading: false\n        });\n    }\n\n    async componentDidMount() {\n        await this.update(); // Fetch initial articles\n    }\n\n    handlePrevClick = async () => {\n        this.setState({ page: this.state.page - 1 }, this.update);\n    }\n\n    handleNextClick = async () => {\n        this.setState({ page: this.state.page + 1 }, this.update);\n    }\n\n    toggleDarkMode = () => {\n        this.setState(prevState => {\n            const newMode = !prevState.darkMode;\n            // Send message to iframe using the ref\n            if (this.iframeRef.current) {\n                this.iframeRef.current.contentWindow.postMessage({ darkMode: newMode }, '*');\n            }\n            return { darkMode: newMode };\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <button onClick={this.toggleDarkMode}>\n                    Toggle Dark Mode\n                </button>\n                <iframe\n                    ref={this.iframeRef} // Use the ref to access the iframe\n                    src=\"http://localhost:3001\"\n                    height=\"1000\"\n                    width=\"1680\"\n                    frameBorder=\"0\"\n                    scrolling=\"yes\"\n                />\n            </>\n        );\n    }\n}\n\nexport default News;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}