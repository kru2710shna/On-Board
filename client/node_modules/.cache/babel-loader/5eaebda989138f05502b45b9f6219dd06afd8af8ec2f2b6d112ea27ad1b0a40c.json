{"ast":null,"code":"var _jsxFileName = \"/Users/krushna/aboutus/client/src/context/Jobs/JobsState.js\",\n  _s = $RefreshSig$();\n// context/Jobs/JobState.js\nimport React, { useState } from \"react\";\nimport JobContext from './jobsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobState = props => {\n  _s();\n  let HOST_URL = 'http://localhost:5001/';\n  const initialJobs = [];\n  const [jobs, setJobs] = useState(initialJobs);\n\n  // Add Jobs \n  const addJob = async newJob => {\n    const {\n      jobTitle,\n      jobDescription,\n      jobSalary,\n      jobType,\n      jobCompany\n    } = newJob;\n    try {\n      await fetch(`${HOST_URL}api/jobs/addjob`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w'\n        },\n        body: JSON.stringify({\n          jobTitle,\n          jobDescription,\n          jobSalary,\n          jobType,\n          jobCompany\n        })\n      });\n      const job = {\n        ...newJob,\n        _id: Date.now().toString(),\n        date: new Date().toISOString()\n      };\n      setJobs([...jobs, job]);\n    } catch (error) {\n      console.error(\"Error adding job:\", error);\n    }\n  };\n\n  // Delete Jobs\n  const deletejob = async id => {\n    console.log(`Deleting job with ID: ${id}`);\n    try {\n      await fetch(`${HOST_URL}api/jobs/deletejob/${id}}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w'\n        },\n        body: JSON.stringify({\n          jobTitle,\n          jobDescription,\n          jobSalary,\n          jobType,\n          jobCompany\n        })\n      });\n    } catch (e) {\n      console.error(e);\n    }\n    setJobs(jobs.filter(job => job._id !== id));\n  };\n\n  // Edit Jobs \n  const editjob = async (id, jobTitle, jobDescription, jobSalary, jobType, jobCompany) => {\n    try {\n      await fetch(`${HOST_URL}api/jobs/updatejob/${id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w'\n        },\n        body: JSON.stringify({\n          jobTitle,\n          jobDescription,\n          jobSalary,\n          jobType,\n          jobCompany\n        })\n      });\n      setJobs(jobs.map(job => job._id === id ? {\n        ...job,\n        jobTitle,\n        jobDescription,\n        jobSalary,\n        jobType,\n        jobCompany\n      } : job));\n    } catch (error) {\n      console.error(\"Error editing job:\", error);\n    }\n  };\n\n  // Fetch All Jobs\n  const getalljobs = async () => {\n    try {\n      const response = await fetch(`${HOST_URL}api/jobs/fetchalljobs`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w'\n        }\n      });\n      const res = await response.json();\n      console.log(res);\n      setJobs(res); // Update state with fetched jobs\n    } catch (error) {\n      console.error(\"Error fetching jobs:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(JobContext.Provider, {\n    value: {\n      jobs,\n      addJob,\n      deletejob,\n      editjob,\n      getalljobs\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(JobState, \"naLDAEbF0yW0dhvYvjzKTUCWZK4=\");\n_c = JobState;\nexport default JobState;\nvar _c;\n$RefreshReg$(_c, \"JobState\");","map":{"version":3,"names":["React","useState","JobContext","jsxDEV","_jsxDEV","JobState","props","_s","HOST_URL","initialJobs","jobs","setJobs","addJob","newJob","jobTitle","jobDescription","jobSalary","jobType","jobCompany","fetch","method","headers","body","JSON","stringify","job","_id","Date","now","toString","date","toISOString","error","console","deletejob","id","log","e","filter","editjob","map","getalljobs","response","res","json","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/krushna/aboutus/client/src/context/Jobs/JobsState.js"],"sourcesContent":["// context/Jobs/JobState.js\nimport React, { useState } from \"react\";\nimport JobContext from './jobsContext';\n\nconst JobState = (props) => {\n  let HOST_URL = 'http://localhost:5001/';\n  const initialJobs = [];\n  const [jobs, setJobs] = useState(initialJobs);\n\n  // Add Jobs \n  const addJob = async (newJob) => {\n    const { jobTitle, jobDescription, jobSalary, jobType, jobCompany } = newJob;\n    try {\n      await fetch(`${HOST_URL}api/jobs/addjob`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w',\n        },\n        body: JSON.stringify({ jobTitle, jobDescription, jobSalary, jobType, jobCompany }),\n      });\n\n      const job = { ...newJob, _id: Date.now().toString(), date: new Date().toISOString() };\n      setJobs([...jobs, job]);\n    } catch (error) {\n      console.error(\"Error adding job:\", error);\n    }\n  };\n\n  // Delete Jobs\n  const deletejob = async (id) => {\n    console.log(`Deleting job with ID: ${id}`);\n    try {\n    await fetch(`${HOST_URL}api/jobs/deletejob/${id}}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w',\n      },\n      body: JSON.stringify({ jobTitle, jobDescription, jobSalary, jobType, jobCompany }),\n    });\n  }\n  catch (e) {\n    console.error(e);\n  }\n\n\n\n    setJobs(jobs.filter(job => job._id !== id));\n  };\n\n  // Edit Jobs \n  const editjob = async (id, jobTitle, jobDescription, jobSalary, jobType, jobCompany) => {\n    try {\n      await fetch(`${HOST_URL}api/jobs/updatejob/${id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w',\n        },\n        body: JSON.stringify({ jobTitle, jobDescription, jobSalary, jobType, jobCompany }),\n      });\n\n      setJobs(jobs.map(job =>\n        job._id === id\n          ? { ...job, jobTitle, jobDescription, jobSalary, jobType, jobCompany }\n          : job\n      ));\n    } catch (error) {\n      console.error(\"Error editing job:\", error);\n    }\n  };\n\n  // Fetch All Jobs\n  const getalljobs = async () => {\n    try {\n      const response = await fetch(`${HOST_URL}api/jobs/fetchalljobs`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w',\n        }\n      });\n\n      const res = await response.json();\n      console.log(res);\n      setJobs(res);  // Update state with fetched jobs\n    } catch (error) {\n      console.error(\"Error fetching jobs:\", error);\n    }\n  };\n\n  return (\n    <JobContext.Provider value={{ jobs, addJob, deletejob, editjob, getalljobs }}>\n      {props.children}\n    </JobContext.Provider>\n  );\n};\n\nexport default JobState;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}