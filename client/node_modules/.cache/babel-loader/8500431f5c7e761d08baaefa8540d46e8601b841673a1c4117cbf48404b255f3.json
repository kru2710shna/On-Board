{"ast":null,"code":"var _jsxFileName = \"/Users/krushna/aboutus/client/src/context/Jobs/JobsState.js\",\n  _s = $RefreshSig$();\n// context/Jobs/JobState.js\nimport React, { useState } from \"react\";\nimport JobContext from './jobsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobState = props => {\n  _s();\n  let HOST_URL = 'http://localhost:5001/';\n  const initialJobs = [{\n    \"_id\": \"67118e4107d611d4bebbbadb\",\n    \"jobTitle\": \"DevOps Engineer\",\n    \"jobDescription\": \"Manage infrastructure, automate workflows, and ensure efficient CI/CD processes.\",\n    \"jobSalary\": \"85000\",\n    \"jobType\": \"Full-time\",\n    \"jobCompany\": \"CloudTech Solutions\"\n  }, {\n    \"_id\": \"671299b7f2d437f7c651923a\",\n    \"jobTitle\": \"Machine Learning Engineer\",\n    \"jobDescription\": \"Develop machine learning models and integrate them into scalable applications.\",\n    \"jobSalary\": \"105000\",\n    \"jobType\": \"Full-time\",\n    \"jobCompany\": \"AI Innovators Inc.\"\n  }, {\n    \"_id\": \"6712a2c4f2d437f7c651923c\",\n    \"user\": \"67103c4e6e1dd166e10cc316\",\n    \"jobTitle\": \"Mobile App Developer\",\n    \"jobDescription\": \"Design and build advanced applications for mobile platforms.\",\n    \"jobSalary\": \"90000\",\n    \"jobType\": \"Full-time\",\n    \"jobCompany\": \"AppDev Solutions\",\n    \"date\": \"2024-10-18T18:02:44.549Z\",\n    \"__v\": 0\n  }];\n  const [jobs, setJobs] = useState(initialJobs);\n\n  // Add Jobs \n  const addJob = async newJob => {\n    const response = await fetch(`${HOST_URL}api/jobs/addjob`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth_tpken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w'\n      },\n      body: JSON.stringify({\n        jobTitle,\n        jobDescription,\n        jobSalary,\n        jobType,\n        jobCompany\n      })\n    });\n    const res = response.json();\n    const job = {\n      ...newJob,\n      _id: Date.now().toString(),\n      date: new Date().toISOString()\n    };\n    setJobs([...jobs, job]);\n  };\n\n  // Delete Jobs\n  const deletejob = id => {\n    console.log(`Deleting job with ID: ${id}`);\n    setJobs(jobs.filter(job => job._id !== id)); // Remove job with matching ID\n  };\n\n  // Edit Jobs \n  const editjob = async (jobTitle, jobDescription, jobSalary, jobType, jobCompany) => {\n    const response = await fetch(`${HOST_URL}api/jobs/updatejob/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth_tpken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w'\n      },\n      body: JSON.stringify(data)\n    });\n    const res = response.json();\n    for (let index = 0; index < jobs.length; index++) {\n      const elemtn = jobs[index];\n      if (elemtn.id === id) {\n        elemtn.title = jobTitle;\n        elemtn.jobDescription = jobDescription;\n        elemtn.jobSalary = jobSalary;\n        elemtn.jobType = jobType;\n        elemtn.jobCompany = jobCompany;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(JobContext.Provider, {\n    value: {\n      jobs,\n      addJob,\n      deletejob,\n      editjob\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(JobState, \"naLDAEbF0yW0dhvYvjzKTUCWZK4=\");\n_c = JobState;\nexport default JobState;\nvar _c;\n$RefreshReg$(_c, \"JobState\");","map":{"version":3,"names":["React","useState","JobContext","jsxDEV","_jsxDEV","JobState","props","_s","HOST_URL","initialJobs","jobs","setJobs","addJob","newJob","response","fetch","method","headers","body","JSON","stringify","jobTitle","jobDescription","jobSalary","jobType","jobCompany","res","json","job","_id","Date","now","toString","date","toISOString","deletejob","id","console","log","filter","editjob","data","index","length","elemtn","title","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/krushna/aboutus/client/src/context/Jobs/JobsState.js"],"sourcesContent":["// context/Jobs/JobState.js\nimport React, { useState } from \"react\";\nimport JobContext from './jobsContext';\n\nconst JobState = (props) => {\n  let HOST_URL = 'http://localhost:5001/'\n  const initialJobs = [\n    {\n      \"_id\": \"67118e4107d611d4bebbbadb\",\n      \"jobTitle\": \"DevOps Engineer\",\n      \"jobDescription\": \"Manage infrastructure, automate workflows, and ensure efficient CI/CD processes.\",\n      \"jobSalary\": \"85000\",\n      \"jobType\": \"Full-time\",\n      \"jobCompany\": \"CloudTech Solutions\",\n    },\n    {\n      \"_id\": \"671299b7f2d437f7c651923a\",\n      \"jobTitle\": \"Machine Learning Engineer\",\n      \"jobDescription\": \"Develop machine learning models and integrate them into scalable applications.\",\n      \"jobSalary\": \"105000\",\n      \"jobType\": \"Full-time\",\n      \"jobCompany\": \"AI Innovators Inc.\",\n    },\n    {\n      \"_id\": \"6712a2c4f2d437f7c651923c\",\n      \"user\": \"67103c4e6e1dd166e10cc316\",\n      \"jobTitle\": \"Mobile App Developer\",\n      \"jobDescription\": \"Design and build advanced applications for mobile platforms.\",\n      \"jobSalary\": \"90000\",\n      \"jobType\": \"Full-time\",\n      \"jobCompany\": \"AppDev Solutions\",\n      \"date\": \"2024-10-18T18:02:44.549Z\",\n      \"__v\": 0\n    }\n  ];\n\n  const [jobs, setJobs] = useState(initialJobs);\n\n  // Add Jobs \n  const addJob = async (newJob) => {\n\n    const response = await fetch(\n      `${HOST_URL}api/jobs/addjob`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth_tpken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w'\n        },\n        body: JSON.stringify({jobTitle, jobDescription, jobSalary, jobType, jobCompany})\n      }\n    )\n    const res = response.json();\n\n\n    const job = {\n      ...newJob,\n      _id: Date.now().toString(),\n      date: new Date().toISOString()\n    };\n    setJobs([...jobs, job]);\n  };\n\n\n\n\n  // Delete Jobs\n  const deletejob = (id) => {\n    console.log(`Deleting job with ID: ${id}`);\n    setJobs(jobs.filter(job => job._id !== id));  // Remove job with matching ID\n  };\n\n\n  // Edit Jobs \n  const editjob = async (jobTitle, jobDescription, jobSalary, jobType, jobCompany) => {\n    const response = await fetch(\n      `${HOST_URL}api/jobs/updatejob/${id}`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'auth_tpken': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjcxMDNjNGU2ZTFkZDE2NmUxMGNjMzE2In0sImlhdCI6MTcyOTExNzI2Mn0.3eJbc01Yo-qeFCffFx-O77reE-iER8vQCb7yYPGbf3w'\n        },\n        body: JSON.stringify(data)\n      }\n    )\n    const res= response.json();\n    \n    for (let index = 0; index < jobs.length; index++) \n      {\n        const elemtn = jobs[index]\n        if (elemtn.id === id) \n          {\n            elemtn.title = jobTitle;\n            elemtn.jobDescription = jobDescription\n            elemtn.jobSalary = jobSalary\n            elemtn.jobType = jobType\n            elemtn.jobCompany = jobCompany\n          }\n      }\n  }\n\n\n  return (\n    <JobContext.Provider value={{ jobs, addJob, deletejob, editjob }}>\n      {props.children}\n    </JobContext.Provider>\n  );\n}\n\nexport default JobState;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}