{"ast":null,"code":"var _jsxFileName = \"/Users/krushna/aboutus/client/src/components/Login.js\",\n  _s = $RefreshSig$();\n// src/components/Login.js\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n// import { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Initialize the hook for navigation\n  // const { handleLogin } = useAuth(); // Get handleLogin from context\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // const response = await fetch('https://your-backend-api.com/login', {\n      //     method: 'POST',\n      //     headers: {\n      //         'Content-Type': 'application/json',\n      //     },\n      //     body: JSON.stringify({ email, password }),\n      // });\n\n      // if (response.ok) {\n      //     const data = await response.json();\n      //     localStorage.setItem('token', data.token); // Store token\n      //     handleLogin(); // Call the handleLogin to update state\n      //     navigate('/'); // Redirect to homepage after login\n      // } else {\n      //     const errorData = await response.json();\n      //     alert(errorData.message || 'Login failed');\n      // }\n      alert('Login form submitted'); // Dummy alert for now\n\n      // Redirect to BodyPage after successful login (temporary for now)\n      navigate('/body'); // Redirect to BodyPage\n    } catch (error) {\n      console.error('Error:', error);\n      alert('Login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title text-center mb-4\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"email\",\n                  className: \"form-label\",\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  className: \"form-control\",\n                  id: \"email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  className: \"form-label\",\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  className: \"form-control\",\n                  id: \"password\",\n                  value: password,\n                  onChange: e => setPassword(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary w-100\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/signup\",\n                  children: \"Create New Account\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["/Users/krushna/aboutus/client/src/components/Login.js"],"sourcesContent":["// src/components/Login.js\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n// import { useAuth } from './AuthContext';\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate(); // Initialize the hook for navigation\n    // const { handleLogin } = useAuth(); // Get handleLogin from context\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            // const response = await fetch('https://your-backend-api.com/login', {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-Type': 'application/json',\n            //     },\n            //     body: JSON.stringify({ email, password }),\n            // });\n\n            // if (response.ok) {\n            //     const data = await response.json();\n            //     localStorage.setItem('token', data.token); // Store token\n            //     handleLogin(); // Call the handleLogin to update state\n            //     navigate('/'); // Redirect to homepage after login\n            // } else {\n            //     const errorData = await response.json();\n            //     alert(errorData.message || 'Login failed');\n            // }\n            alert('Login form submitted'); // Dummy alert for now\n            \n            // Redirect to BodyPage after successful login (temporary for now)\n            navigate('/body'); // Redirect to BodyPage\n        } catch (error) {\n            console.error('Error:', error);\n            alert('Login failed');\n        }\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h2 className=\"card-title text-center mb-4\">Login</h2>\n                            <form onSubmit={handleSubmit}>\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Email:</label>\n                                    <input\n                                        type=\"email\"\n                                        className=\"form-control\"\n                                        id=\"email\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"password\" className=\"form-label\">Password:</label>\n                                    <input\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                        id=\"password\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                        required\n                                    />\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary w-100\">Login</button>\n                            </form>\n                            <div className=\"mt-3 text-center\">\n                                <p>Don't have an account? <Link to=\"/signup\">Create New Account</Link></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}