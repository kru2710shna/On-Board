{"ast":null,"code":"var _jsxFileName = \"/Users/krushna/aboutus/client/src/components/Profile.js\",\n  _s = $RefreshSig$();\n// src/components/Profile.js\nimport React, { useEffect, useState } from 'react';\n// import { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  // const { user } = useAuth(); // Assuming user details are stored in AuthContext\n  const [profileData, setProfileData] = useState(null);\n  useEffect(() => {\n    // Fetch user profile data from API or use hardcoded data for testing\n    // if (user) {\n    //     setProfileData(user); // If using AuthContext, replace with fetch logic if needed\n    // }\n\n    // Temporary hardcoded profile data for UI testing\n    const mockProfileData = {\n      username: 'JohnDoe',\n      email: 'john.doe@example.com'\n    };\n    setProfileData(mockProfileData); // Set hardcoded data for now\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), profileData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }, this), \" \", profileData.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 24\n        }, this), \" \", profileData.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading profile...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"tti/q2QNxkzBGTlEx7V70Fh/qTY=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Profile","_s","profileData","setProfileData","mockProfileData","username","email","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/krushna/aboutus/client/src/components/Profile.js"],"sourcesContent":["// src/components/Profile.js\nimport React, { useEffect, useState } from 'react';\n// import { useAuth } from './AuthContext';\n\nconst Profile = () => {\n    // const { user } = useAuth(); // Assuming user details are stored in AuthContext\n    const [profileData, setProfileData] = useState(null);\n\n    useEffect(() => {\n        // Fetch user profile data from API or use hardcoded data for testing\n        // if (user) {\n        //     setProfileData(user); // If using AuthContext, replace with fetch logic if needed\n        // }\n        \n        // Temporary hardcoded profile data for UI testing\n        const mockProfileData = {\n            username: 'JohnDoe',\n            email: 'john.doe@example.com',\n        };\n        setProfileData(mockProfileData); // Set hardcoded data for now\n    }, []);\n\n    return (\n        <div className=\"container mt-4\">\n            <h2>User Profile</h2>\n            {profileData ? (\n                <div>\n                    <p><strong>Username:</strong> {profileData.username}</p>\n                    <p><strong>Email:</strong> {profileData.email}</p>\n                    {/* Add more fields as needed */}\n                </div>\n            ) : (\n                <p>Loading profile...</p>\n            )}\n        </div>\n    );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA;;IAEA;IACA,MAAMQ,eAAe,GAAG;MACpBC,QAAQ,EAAE,SAAS;MACnBC,KAAK,EAAE;IACX,CAAC;IACDH,cAAc,CAACC,eAAe,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKQ,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BT,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBV,WAAW,gBACRH,OAAA;MAAAS,QAAA,gBACIT,OAAA;QAAAS,QAAA,gBAAGT,OAAA;UAAAS,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACV,WAAW,CAACG,QAAQ;MAAA;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxDb,OAAA;QAAAS,QAAA,gBAAGT,OAAA;UAAAS,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACV,WAAW,CAACI,KAAK;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjD,CAAC,gBAENb,OAAA;MAAAS,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACX,EAAA,CAhCID,OAAO;AAAAa,EAAA,GAAPb,OAAO;AAkCb,eAAeA,OAAO;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}