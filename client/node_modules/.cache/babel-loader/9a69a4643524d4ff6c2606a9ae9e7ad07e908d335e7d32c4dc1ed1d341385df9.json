{"ast":null,"code":"var _jsxFileName = \"/Users/krushna/aboutus/client/src/components/News.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiKey = process.env.REACT_APP_NEWS_API_KEY;\nexport class News extends Component {\n  constructor(props) {\n    super(props);\n    this.updateIframeStyle = () => {\n      if (this.iframeRef.current) {\n        const mode = this.state.darkMode ? 'dark' : 'light';\n        this.iframeRef.current.contentWindow.postMessage({\n          darkMode: mode\n        }, '*'); // Send darkMode state to iframe\n      }\n    };\n    this.handlePrevClick = async () => {\n      console.log(\"Previous\");\n      this.setState({\n        page: this.state.page - 1\n      });\n      this.update();\n    };\n    this.handleNextClick = async () => {\n      console.log(\"Next\");\n      this.setState({\n        page: this.state.page + 1\n      });\n      this.update();\n    };\n    this.toggleDarkMode = () => {\n      this.setState(prevState => {\n        const newMode = !prevState.darkMode;\n        // Send message to iframe using the ref\n        if (this.iframeRef.current) {\n          this.iframeRef.current.contentWindow.postMessage({\n            darkMode: newMode\n          }, '*');\n        }\n        return {\n          darkMode: newMode\n        };\n      });\n    };\n    this.state = {\n      articles: [],\n      loading: false,\n      page: 1,\n      totalResults: 0,\n      darkMode: false\n    };\n    document.title = `${this.props.category} - On-Board Break`;\n  }\n  async update() {\n    const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=93e1ffea8d2444fa8d9fa45daa690004&page=${this.state.page}&pageSize=${this.props.pageSize}`;\n    this.setState({\n      loading: true\n    });\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    console.log('Parsed Data:', parsedData);\n    console.log(parsedData);\n    this.setState({\n      articles: parsedData.articles,\n      totalResults: parsedData.totalResults,\n      loading: false\n    });\n  }\n  async componentDidMount() {\n    await this.fetchArticles();\n    window.addEventListener('message', this.handleMessage); // Listen for messages from the parent\n  }\n  componentWillUnmount() {\n    window.removeEventListener('message', this.handleMessage); // Clean up listener\n  }\n  async componentDidMount() {\n    let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=${apiKey}&page=1&pageSize=${this.props.pageSize}`;\n    this.setState({\n      loading: true\n    });\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    console.log('Parsed Data:', parsedData);\n    console.log(parsedData);\n    this.setState({\n      articles: parsedData.articles,\n      totalResults: parsedData.totalResults,\n      loading: false\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: \"http://localhost:3001\",\n        ref: this.iframeRef,\n        height: \"1000\",\n        width: \"1680\",\n        frameborder: \"0\",\n        scrolling: \"yes\",\n        style: {\n          backgroundColor: this.state.darkMode ? '#333' : '#fff'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n}\nNews.defaultProps = {\n  country: 'in',\n  pageSize: 8,\n  category: 'general'\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string,\n  isDarkMode: PropTypes.bool\n};\nexport default News;","map":{"version":3,"names":["React","Component","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","apiKey","process","env","REACT_APP_NEWS_API_KEY","News","constructor","props","updateIframeStyle","iframeRef","current","mode","state","darkMode","contentWindow","postMessage","handlePrevClick","console","log","setState","page","update","handleNextClick","toggleDarkMode","prevState","newMode","articles","loading","totalResults","document","title","category","url","country","pageSize","data","fetch","parsedData","json","componentDidMount","fetchArticles","window","addEventListener","handleMessage","componentWillUnmount","removeEventListener","render","children","src","ref","height","width","frameborder","scrolling","style","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","defaultProps","propTypes","string","number","isDarkMode","bool"],"sources":["/Users/krushna/aboutus/client/src/components/News.js"],"sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nconst apiKey = process.env.REACT_APP_NEWS_API_KEY;\n\nexport class News extends Component {\n    static defaultProps = {\n        country: 'in',\n        pageSize: 8,\n        category: 'general',\n    }\n\n    static propTypes = {\n        country: PropTypes.string,\n        pageSize: PropTypes.number,\n        category: PropTypes.string,\n        isDarkMode: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: [],\n            loading: false,\n            page: 1,\n            totalResults: 0,\n            darkMode: false\n        }\n        document.title = `${this.props.category} - On-Board Break`;\n    }\n\n\n    async update() {\n        const url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=93e1ffea8d2444fa8d9fa45daa690004&page=${this.state.page}&pageSize=${this.props.pageSize}`;\n        this.setState({ loading: true });\n        let data = await fetch(url);\n        let parsedData = await data.json()\n        console.log('Parsed Data:', parsedData);\n        console.log(parsedData);\n        this.setState({\n            articles: parsedData.articles,\n            totalResults: parsedData.totalResults,\n            loading: false\n        })\n\n\n    }\n\n    async componentDidMount() {\n        await this.fetchArticles();\n        window.addEventListener('message', this.handleMessage); // Listen for messages from the parent\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('message', this.handleMessage); // Clean up listener\n    }\n    updateIframeStyle = () => {\n        if (this.iframeRef.current) {\n            const mode = this.state.darkMode ? 'dark' : 'light';\n            this.iframeRef.current.contentWindow.postMessage({ darkMode: mode }, '*'); // Send darkMode state to iframe\n        }\n    };\n\n\n    async componentDidMount() {\n        let url = `https://newsapi.org/v2/top-headlines?country=${this.props.country}&category=${this.props.category}&apiKey=${apiKey}&page=1&pageSize=${this.props.pageSize}`;\n        this.setState({ loading: true });\n        let data = await fetch(url);\n        let parsedData = await data.json()\n        console.log('Parsed Data:', parsedData);\n        console.log(parsedData);\n        this.setState({\n            articles: parsedData.articles,\n            totalResults: parsedData.totalResults,\n            loading: false\n        })\n    }\n\n    handlePrevClick = async () => {\n        console.log(\"Previous\");\n        this.setState({ page: this.state.page - 1 })\n        this.update();\n\n    }\n\n    handleNextClick = async () => {\n        console.log(\"Next\");\n        this.setState({ page: this.state.page + 1 })\n        this.update();\n\n    }\n    toggleDarkMode = () => {\n        this.setState(prevState => {\n            const newMode = !prevState.darkMode;\n            // Send message to iframe using the ref\n            if (this.iframeRef.current) {\n                this.iframeRef.current.contentWindow.postMessage({ darkMode: newMode }, '*');\n            }\n            return { darkMode: newMode };\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <iframe src=\"http://localhost:3001\" ref={this.iframeRef} height=\"1000\" width=\"1680\" frameborder=\"0\" scrolling=\"yes\" style={{ backgroundColor: this.state.darkMode ? '#333' : '#fff' }}  />\n            </>\n        )\n    }\n}\n\nexport default News"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}