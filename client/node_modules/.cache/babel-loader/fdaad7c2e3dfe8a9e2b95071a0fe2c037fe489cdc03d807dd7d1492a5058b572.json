{"ast":null,"code":"var _jsxFileName = \"/Users/krushna/aboutus/client/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport NavBar from './components/NavBar';\nimport AboutPage from './components/AboutPage';\nimport MemberPage from './components/MemberPage';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Logout from './components/Logout';\nimport { AuthProvider, useAuth } from './components/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Track authentication state\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n    localStorage.setItem('darkMode', !isDarkMode); // Save preference\n  };\n\n  // Check if the user is authenticated when the component mounts\n  useEffect(() => {\n    // Here you can add logic to check if the user is logged in, e.g., check local storage or make an API call\n    const loggedIn = localStorage.getItem('isAuthenticated');\n    if (loggedIn) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [isAuthenticated && /*#__PURE__*/_jsxDEV(NavBar, {\n        isDarkMode: isDarkMode,\n        toggleDarkMode: toggleDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(SignUp, {\n            setIsAuthenticated: setIsAuthenticated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            setIsAuthenticated: setIsAuthenticated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(AboutPage, {\n              isDarkMode: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/member/:name\",\n            element: /*#__PURE__*/_jsxDEV(MemberPage, {\n              isDarkMode: isDarkMode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/logout\",\n            element: /*#__PURE__*/_jsxDEV(Logout, {\n              setIsAuthenticated: setIsAuthenticated\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"sJ72IeRQicWkw8S+ExQ1AxmtnMY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","useNavigate","HomePage","NavBar","AboutPage","MemberPage","Login","SignUp","Logout","AuthProvider","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","isDarkMode","setIsDarkMode","toggleDarkMode","prevMode","localStorage","setItem","loggedIn","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","element","_c","$RefreshReg$"],"sources":["/Users/krushna/aboutus/client/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport HomePage from './components/HomePage';\nimport NavBar from './components/NavBar';\nimport AboutPage from './components/AboutPage';\nimport MemberPage from './components/MemberPage';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Logout from './components/Logout';\nimport { AuthProvider, useAuth } from './components/AuthContext';\n\nfunction App() {\n    const [isAuthenticated, setIsAuthenticated] = useState(false); // Track authentication state\n    const [isDarkMode, setIsDarkMode] = useState(false);\n\n    const toggleDarkMode = () => {\n        setIsDarkMode(prevMode => !prevMode);\n        localStorage.setItem('darkMode', !isDarkMode); // Save preference\n    };\n\n    // Check if the user is authenticated when the component mounts\n    useEffect(() => {\n        // Here you can add logic to check if the user is logged in, e.g., check local storage or make an API call\n        const loggedIn = localStorage.getItem('isAuthenticated');\n        if (loggedIn) {\n            setIsAuthenticated(true);\n        }\n    }, []);\n\n    return (\n        <AuthProvider>\n            <Router>\n                {/* Conditionally render NavBar only when user is authenticated */}\n                {isAuthenticated && <NavBar isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} />}\n\n                <Routes>\n                    {/* Render HomePage first */}\n                    <Route exact path='/' element={<HomePage />} />\n\n                    {/* Render SignUp and Login pages */}\n                    <Route path=\"/signup\" element={<SignUp setIsAuthenticated={setIsAuthenticated} />} />\n                    <Route path=\"/login\" element={<Login setIsAuthenticated={setIsAuthenticated} />} />\n\n                    {/* Render other pages after login */}\n                    {isAuthenticated && (\n                        <>\n                            <Route path=\"/about\" element={<AboutPage isDarkMode={isDarkMode} />} />\n                            <Route path=\"/member/:name\" element={<MemberPage isDarkMode={isDarkMode} />} />\n                            <Route path=\"/logout\" element={<Logout setIsAuthenticated={setIsAuthenticated} />} />\n                        </>\n                    )}\n                </Routes>\n            </Router>\n        </AuthProvider>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,YAAY,EAAEC,OAAO,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAM0B,cAAc,GAAGA,CAAA,KAAM;IACzBD,aAAa,CAACE,QAAQ,IAAI,CAACA,QAAQ,CAAC;IACpCC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,CAACL,UAAU,CAAC,CAAC,CAAC;EACnD,CAAC;;EAED;EACAvB,SAAS,CAAC,MAAM;IACZ;IACA,MAAM6B,QAAQ,GAAGF,YAAY,CAACG,OAAO,CAAC,iBAAiB,CAAC;IACxD,IAAID,QAAQ,EAAE;MACVP,kBAAkB,CAAC,IAAI,CAAC;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA,CAACH,YAAY;IAAAkB,QAAA,eACTf,OAAA,CAACd,MAAM;MAAA6B,QAAA,GAEFV,eAAe,iBAAIL,OAAA,CAACT,MAAM;QAACgB,UAAU,EAAEA,UAAW;QAACE,cAAc,EAAEA;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEtFnB,OAAA,CAACZ,MAAM;QAAA2B,QAAA,gBAEHf,OAAA,CAACb,KAAK;UAACiC,KAAK;UAACC,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEtB,OAAA,CAACV,QAAQ;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAG/CnB,OAAA,CAACb,KAAK;UAACkC,IAAI,EAAC,SAAS;UAACC,OAAO,eAAEtB,OAAA,CAACL,MAAM;YAACW,kBAAkB,EAAEA;UAAmB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrFnB,OAAA,CAACb,KAAK;UAACkC,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAEtB,OAAA,CAACN,KAAK;YAACY,kBAAkB,EAAEA;UAAmB;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAGlFd,eAAe,iBACZL,OAAA,CAAAE,SAAA;UAAAa,QAAA,gBACIf,OAAA,CAACb,KAAK;YAACkC,IAAI,EAAC,QAAQ;YAACC,OAAO,eAAEtB,OAAA,CAACR,SAAS;cAACe,UAAU,EAAEA;YAAW;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvEnB,OAAA,CAACb,KAAK;YAACkC,IAAI,EAAC,eAAe;YAACC,OAAO,eAAEtB,OAAA,CAACP,UAAU;cAACc,UAAU,EAAEA;YAAW;cAAAS,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/EnB,OAAA,CAACb,KAAK;YAACkC,IAAI,EAAC,SAAS;YAACC,OAAO,eAAEtB,OAAA,CAACJ,MAAM;cAACU,kBAAkB,EAAEA;YAAmB;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eACvF,CACL;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEvB;AAACf,EAAA,CA5CQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}